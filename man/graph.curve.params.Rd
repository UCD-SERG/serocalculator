% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph.curve.params.R
\name{graph.curve.params}
\alias{graph.curve.params}
\title{Graph estimated antibody decay curves}
\usage{
graph.curve.params(
  object,
  antigen_isos = unique(object$antigen_iso),
  verbose = FALSE,
  show_quantiles = TRUE,
  alpha_samples = 0.3,
  log_x = FALSE,
  log_y = TRUE,
  n_curves = 100,
  iters_to_graph = head(unique(object$iter), n_curves),
  ...
)
}
\arguments{
\item{object}{a \code{\link[=data.frame]{data.frame()}} containing MCMC samples of antibody decay curve parameters}

\item{antigen_isos}{antigen isotypes to analyze
(can subset \code{object})}

\item{verbose}{verbose output}

\item{show_quantiles}{whether to show point-wise (over time) quantiles}

\item{alpha_samples}{\code{alpha} parameter passed to \link[ggplot2:geom_path]{ggplot2::geom_line}
(has no effect if \code{iters_to_graph} is empty)}

\item{log_x}{should the x-axis be on a logarithmic scale (\code{TRUE})
or linear scale (\code{FALSE}, default)?}

\item{log_y}{should the Y-axis be on a logarithmic scale
(default, \code{TRUE}) or linear scale (\code{FALSE})?}

\item{n_curves}{how many curves to plot (see details).}

\item{iters_to_graph}{which rows of \code{curve_params} to plot
(overrides \code{n_curves}).}

\item{...}{not currently used}
}
\value{
a \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} object
}
\description{
Graph estimated antibody decay curves
}
\details{
\subsection{\code{n_curves} and \code{iters_to_graph}}{

In most cases, \code{object} will contain too many rows of MCMC
samples for all of these samples to be plotted at once.
\itemize{
\item Setting the  \code{n_curves} argument to a value smaller than the
number of rows in \code{curve_params} will cause this function to select
the first \code{n_curves} rows to graph.
\item Setting \code{n_curves} larger than the number of rows in ` will
result all curves being plotted.
\item If the user directly specifies the \code{iters_to_graph} argument,
then \code{n_curves} has no effect.
}
}
}
\examples{
curve <-
  typhoid_curves_nostrat_100 |>
  dplyr::filter(antigen_iso \%in\% c("HlyE_IgA", "HlyE_IgG"))

plot1 <- graph.curve.params(curve)

print(plot1)

plot2 <- graph.curve.params(curve, n_curves = 100)
show(plot2)

}
